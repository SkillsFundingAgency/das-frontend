$radios-size: spacing(7);
$radios-label-padding-left-right: spacing(3);

  // When the default focus width is used on a curved edge it looks visually smaller.
  // So for the circular radios we bump the default to make it look visually consistent.
  $radios-focus-width: $focus-width + 1px;

  .radios__item {
    display: block;
    position: relative;
    min-height: $radios-size;
    margin-bottom: spacing(2);
    padding: 0 0 0 $radios-size;
    clear: left;
  }

  .radios__item:last-child,
  .radios__item:last-of-type {
    margin-bottom: 0;
  }

  .radios__input {
    position: absolute;

    z-index: 1;
    top: 0;
    left: 0;

    width: $radios-size;
    height: $radios-size;

    cursor: pointer;

      margin: 0;
      opacity: 0;
  }

  .radios__label {
    display: inline-block;
    margin-bottom: 0;
    padding: 8px $radios-label-padding-left-right spacing(1);
    cursor: pointer;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    color: inherit;
    font-weight: 500;
  }

  .radios__hint {
    display: block;
    padding-right: $radios-label-padding-left-right;
    padding-left: $radios-label-padding-left-right;
  }

  .radios__input + .radios__label::before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;

    width: $radios-size;
    height: $radios-size;

    border: $border-width-form-element solid currentColor;
    border-radius: 50%;
    background: transparent;

  }

  .radios__input.input-validation-error + .radios__label::before {
    border-color: $error-colour;
  }

  .radios__input + .radios__label::after {
    content: "";

    position: absolute;
    top: spacing(2);
    left: spacing(2);

    width: 0;
    height: 0;

    border: spacing(2) solid currentColor;
    border-radius: 50%;
    opacity: 0;
    background: currentColor;
  }

  // Focused state
  .radios__input:focus + .radios__label::before {
    // Since box-shadows are removed when users customise their colours
    // We set a transparent outline that is shown instead.
    // https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/
    outline: $focus-width solid transparent;
    outline-offset: $focus-width;
    box-shadow: 0 0 0 $radios-focus-width $focus-colour;
  }

  // Selected state
  .radios__input:checked + .radios__label::after {
    opacity: 1;
  }

  // Disabled state
  .radios__input:disabled,
  .radios__input:disabled + .radios__label {
    cursor: default;
  }

  .radios__input:disabled + .radios__label {
    opacity: .5;
  }

  // Inline variant
  .radios--inline {
    @include mq ($from: tablet) {
      @include clearfix;

      .radios__item {
        margin-right: spacing(4);
        float: left;
        clear: none;
      }
    }

    // Prevent inline modifier being used with conditional reveals
    &.radios--conditional {
      .radios__item {
        margin-right: 0;
        float: none;
      }
    }
  }

  .radios__divider {
    $divider-size: $radios-size !default;
    @include font($size: 19);
    
    width: $divider-size;
    margin-bottom: spacing(2);
    text-align: center;
  }

  $conditional-border-width: $border-width-mobile;
  // Calculate the amount of padding needed to keep the border centered against the radios.
  $conditional-border-padding: ($radios-size / 2) - ($conditional-border-width / 2);
  // Move the border centered with the radios
  $conditional-margin-left: $conditional-border-padding;
  // Move the contents of the conditional inline with the label
  $conditional-padding-left: $conditional-border-padding + $radios-label-padding-left-right;

  .radios__conditional {
    @include responsive-margin(4, "bottom");
    margin-left: $conditional-margin-left;
    padding-left: $conditional-padding-left;
    border-left: $conditional-border-width solid $border-colour;

    .js-enabled &--hidden {
      display: none;
    }

    & > :last-child {
      margin-bottom: 0;
    }
  }